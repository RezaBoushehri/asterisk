[from-internal]
; Dialplan for extensions 1XX with recording and fallback

exten => _1XX,1,NoOp(Processing call to ${EXTEN} from ${CALLERID(num)})
    same => n,GotoIf($["${CALLERID(num)}" = "${EXTEN}"]?self_call:not_self)

    ; Prevent calling yourself
    same => n(self_call),Playback(cannot-call-self)
    same => n,Hangup()

    ; Call recording setup
    same => n(not_self),Set(MONITOR_FILENAME=/var/spool/asterisk/monitor/${CALLERID(num)}-${EXTEN}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}.wav)
    same => n,Set(MIXMONITOR_FILENAME=${MONITOR_FILENAME})
    same => n,MixMonitor(${MIXMONITOR_FILENAME},a)

    ; Get all reachable contacts for EXTEN (auto handles multiple devices)
    same => n,Set(DIAL_CONTACTS=${PJSIP_DIAL_CONTACTS(${EXTEN})})
    same => n,NoOp(DIAL_CONTACTS: ${DIAL_CONTACTS})

    ; Dial all contacts (parallel call)
    same => n,Dial(${DIAL_CONTACTS},30,,b(default^monitor^1))

    ; Handle no answer case
    same => n,GotoIf($["${DIALSTATUS}" = "NOANSWER"]?no_answer:status_check)

    ; Busy or congested → check fallback
    same => n(status_check),Set(STATUS_MATCH=$[$["${DIALSTATUS}" = "BUSY"] | $["${DIALSTATUS}" = "CONGESTION"]])
    same => n,GotoIf($["${STATUS_MATCH}" = "1"]?busy_fallback:hangup)

    ; Fallback for busy
    same => n(busy_fallback),Set(FALLBACK=${ODBC_SQL(SELECT fallback_extension FROM extension_fallbacks WHERE exten='${EXTEN}')})
    same => n,GotoIf($["${FALLBACK}" = ""]?no_fallback:have_fallback)

    ; Fallback for no answer
    same => n(no_answer),Set(FALLBACK=${ODBC_SQL(SELECT fallback_extension FROM extension_fallbacks WHERE exten='${EXTEN}')})
    same => n,GotoIf($["${FALLBACK}" = ""]?no_fallback:have_fallback)

    ; If we have fallback → dial it
    same => n(have_fallback),Dial(PJSIP/${FALLBACK},30)

    ; If no fallback → play message
    same => n(no_fallback),Playback(vm-nobodyavail)

    ; Default hangup
    same => n(hangup),Hangup()


; Invalid extension
exten => i,1,Playback(cannot-complete-as-dialed)
    same => n,Playback(check-number-dial-again)
    same => n,Hangup()

; Hangup handler
exten => h,1,Hangup()


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; IVR Dialplan - cleaned & robust
; - from-trunk: handles incoming calls, finds trunk, IVR or falls back to endpoints
; - ivr-menu: plays entry prompt, waits for DTMF, looks up actions from DB via ODBC
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[from-trunk]
; ورودی همه تماس‌های ورودی
exten => _X.,1,NoOp(Incoming call - CallerID: ${CALLERID(num)}, Exten: ${EXTEN})

 ; گرفتن IP سمت مقابل
 same => n,Set(HOST_IP=${CUT(CHANNEL(pjsip,remote_addr),:,1)})
 same => n,NoOp(HOST_IP: ${HOST_IP})

 ; گرفتن sipID از دیتابیس (بر اساس host)
 same => n,Set(SIPID=${ODBC_TRUNK_LOOKUP(${HOST_IP})})
 same => n,GotoIf($["${SIPID}" = ""]?no_trunk)

 ; گرفتن تنظیمات IVR برای این ترانک (اینجا IVR_MENU باید رشته‌ای مثل "9,1758380649856-test.wav,5,3" برگردونه)
 same => n,Set(IVR_MENU=${ODBC_IVR_LOOKUP(${HOST_IP})})
 same => n,GotoIf($["${IVR_MENU}" != ""]?ivr_found:no_ivr)

 ; اگر IVR پیدا شد
 same => n(ivr_found),NoOp(IVR found: ${IVR_MENU})

 ; جدا کردن فیلدها
 same => n,Set(IVR_ID=${CUT(IVR_MENU,",",1)})
 same => n,Set(ENTRY_PROMPT=${CUT(IVR_MENU,",",2)})
 same => n,Set(IVR_TIMEOUT=${CUT(IVR_MENU,",",3)})
 same => n,Set(MAX_ATTEMPTS=${CUT(IVR_MENU,",",4)})

 ; پیش‌فرض‌ها
 same => n,Set(ENTRY_PROMPT=${IF($["${ENTRY_PROMPT}" = ""]?welcome:${ENTRY_PROMPT})})
 same => n,Set(IVR_TIMEOUT=${IF($["${IVR_TIMEOUT}" = ""]?5:${IVR_TIMEOUT})})
 same => n,Set(MAX_ATTEMPTS=${IF($["${MAX_ATTEMPTS}" = ""]?3:${MAX_ATTEMPTS})})

 same => n,NoOp(Using IVR_ID=${IVR_ID}, ENTRY_PROMPT=${ENTRY_PROMPT}, TIMEOUT=${IVR_TIMEOUT}, MAX_ATTEMPTS=${MAX_ATTEMPTS})
 ; برو به منوی IVR — استفاده از s تا پخش prompt اول انجام بشه و بعد منتظر DTMF باشیم
 same => n,Goto(ivr-menu,s,1)

 ; -------------- ادامه مسیرهای بدون IVR (همون کدت) --------------
 same => n(no_ivr),NoOp(No IVR found for trunk, dialing SIPID=${SIPID})
 same => n,Set(SIPID_LIST=${SIPID})
 same => n,Set(VALID_SIPID=)
 same => n,While($["${SET(ENDPOINT=${SHIFT(SIPID_LIST,&)})}" != ""])
   same => n,Set(STATE=${DEVICE_STATE(${ENDPOINT})})
   same => n,GotoIf($["${STATE}" = "NOT_INUSE" | "${STATE}" = "INUSE" | "${STATE}" = "RINGING"]?add_endpoint)
   same => n,NoOp(Skipping ${ENDPOINT} with state ${STATE})
   same => n,Goto(skip_endpoint)
   same => n(add_endpoint),Set(VALID_SIPID=${IF($["${VALID_SIPID}"=""]?${ENDPOINT}:${VALID_SIPID}&${ENDPOINT})})
   same => n(skip_endpoint),NoOp()
 same => n,EndWhile()

 same => n,GotoIf($["${VALID_SIPID}" = ""]?no_endpoints)
 same => n,NoOp(Preparing to dial: ${VALID_SIPID})
 same => n,Dial(${VALID_SIPID},30,g,b(default^monitor^1))
 same => n,NoOp(Dial status: ${DIALSTATUS})
 same => n,GotoIf($["${DIALSTATUS}" = "CHANUNAVAIL" | "${DIALSTATUS}" = "CONGESTION"]?no_endpoints)

 same => n,Set(MONITOR_FILENAME=/var/spool/asterisk/monitor/inbound-${CALLERID(num)}-${EXTEN}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}.wav)
 same => n,MixMonitor(${MONITOR_FILENAME},a)
 same => n,GotoIf($["${DIALSTATUS}" = "NOANSWER"]?no_answer:hangup)

 same => n(no_trunk),NoOp(No trunk found for ${HOST_IP})
 same => n,Playback(vm-nobodyavail)
 same => n,Hangup()

 same => n(no_endpoints),NoOp(No valid endpoints for trunk SIPID=${SIPID})
 same => n,Playback(vm-nobodyavail)
 same => n,Hangup()

 same => n(no_answer),Set(FALLBACK=${ODBC_FALLBACK_LOOKUP(${SIPID})})
 same => n,GotoIf($["${FALLBACK}" = ""]?no_fallback:have_fallback)

 same => n(have_fallback),NoOp(Dialing fallback ${FALLBACK})
 same => n,Dial(PJSIP/${FALLBACK},30)

 same => n(no_fallback),Playback(vm-nobodyavail)
 same => n(hangup),Hangup()


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; IVR handling context — now using 's' as entrypoint
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[ivr-menu]
; entrypoint: use 's' so we don't accidentally hit numeric exten matching
exten => s,1,NoOp(Entering IVR menu ID: ${IVR_ID})
 same => n,Set(ATTEMPT=1)
 same => n(retry),NoOp(Attempt ${ATTEMPT} of ${MAX_ATTEMPTS})
 same => n,GotoIf($[${ATTEMPT} > ${MAX_ATTEMPTS}]?timeout)
 ; play entry prompt (file must be in /var/lib/asterisk/sounds/custom/ and no file-ext here)
 same => n,ExecIf($["${ENTRY_PROMPT}" != ""]?Background(custom/${ENTRY_PROMPT}))
 same => n,WaitExten(${IVR_TIMEOUT})
 same => n,Set(ATTEMPT=$[${ATTEMPT} + 1])
 same => n,Goto(retry)

 same => n(timeout),Playback(vm-nobodyavail)
 same => n,Hangup()

; Handle DTMF keys for the active IVR (digits, #, *)
; pattern will match when user presses key while we're in WaitExten
exten => _[0-9#*],1,NoOp(DTMF received: ${EXTEN} for IVR ID: ${IVR_ID})
 same => n,Set(ACTION=${ODBC_IVR_ACTION(${IVR_ID},${EXTEN})})
 same => n,GotoIf($["${ACTION}" = ""]?invalid)
 same => n,Set(ACTION_TYPE=${CUT(ACTION,^,1)})
 same => n,Set(ACTION_VALUE=${CUT(ACTION,^,2)})
 same => n,NoOp(Resolved ACTION_TYPE=${ACTION_TYPE} ACTION_VALUE=${ACTION_VALUE})

 same => n,GotoIf($["${ACTION_TYPE}" = "dial"]?dial_action)
 same => n,GotoIf($["${ACTION_TYPE}" = "playback"]?playback_action)
 same => n,GotoIf($["${ACTION_TYPE}" = "menu"]?menu_action)
 same => n,GotoIf($["${ACTION_TYPE}" = "hangup"]?hangup_action)

 same => n(invalid),Playback(invalid)
 ; برگرد به retry داخل همون s
 same => n,Goto(ivr-menu,s,retry)

 same => n(dial_action),NoOp(Performing dial to ${ACTION_VALUE})
 same => n,Dial(PJSIP/${ACTION_VALUE},30)
 same => n,GotoIf($["${DIALSTATUS}" = "NOANSWER"]?invalid:hangup_action)

 same => n(playback_action),NoOp(Playing back ${ACTION_VALUE})
 same => n,Playback(${ACTION_VALUE})
 same => n,Goto(ivr-menu,s,retry)

 same => n(menu_action),NoOp(Going to menu ${ACTION_VALUE})
 ; اگر ACTION_VALUE یک menu ID است، مقدار IVR_ID را آپدیت کن و دوباره وارد s شو
 same => n,Set(IVR_ID=${ACTION_VALUE})
 same => n,Goto(ivr-menu,s,1)

 same => n(hangup_action),NoOp(Hangup requested by IVR action)
 same => n,Hangup()



[outbound-allroutes]
exten => _X.,1,NoOp(Outbound call to ${EXTEN} from ${CALLERID(num)})
exten => _X.,n,Set(MONITOR_FILENAME=/var/spool/asterisk/monitor/outbound-${CALLERID(num)}-${EXTEN}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}.wav)
exten => _X.,n,MixMonitor(${MONITOR_FILENAME},a)
exten => _X.,n,Dial(PJSIP/${EXTEN}@32344100,30)
exten => _X.,n,Hangup()

[macro-hangupcall-custom]
exten => s,1,NoOp(Custom hangup logic)
exten => s,n,Return()#exec "php /var/www/html/fop2/admin/plugins/ivrflow/menu/dialplan.php"
